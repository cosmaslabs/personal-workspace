[tox]
envlist =
    py310
    py311
    py312
    lint
    type
    security
    docs
isolated_build = True
requires =
    tox>=4.12.0
    tox-conda>=0.10.0
skip_missing_interpreters = True

[testenv]
description = Run tests with {basepython}
deps =
    -r requirements.txt
    -r requirements-dev.txt
commands =
    pytest {posargs:tests/} \
        --cov=src \
        --cov-report=term-missing \
        --cov-report=xml \
        -v \
        --durations=10
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONHASHSEED = 0
    ENVIRONMENT = test
passenv =
    BINANCE_API_KEY
    BINANCE_API_SECRET
    FINNHUB_API_KEY

[testenv:lint]
description = Run code quality checks
deps =
    black>=24.0.0
    isort>=5.13.0
    flake8>=7.0.0
    pylint>=3.0.0
commands =
    black --check src tests
    isort --check-only --diff src tests
    flake8 src tests
    pylint src tests

[testenv:type]
description = Run type checks
deps =
    mypy>=1.8.0
    types-PyYAML
    types-requests
    types-python-dateutil
    types-setuptools
commands =
    mypy src tests

[testenv:security]
description = Run security checks
deps =
    bandit>=1.7.0
    safety>=2.3.0
commands =
    bandit -r src
    safety check

[testenv:docs]
description = Build documentation
deps =
    sphinx>=7.2.0
    sphinx-rtd-theme>=1.3.0
    sphinx-autodoc-typehints>=1.25.0
    mkdocs>=1.5.0
    mkdocs-material>=9.5.0
    mkdocstrings>=0.24.0
commands =
    sphinx-build -b html docs/source docs/build/html
    mkdocs build

[testenv:dev]
description = Development environment with all dependencies
deps =
    -r requirements.txt
    -r requirements-dev.txt
commands =

[testenv:gpu]
description = Test environment for GPU support
deps =
    {[testenv]deps}
    tensorflow-gpu>=2.15.0
    torch>=2.2.0
commands =
    pytest tests/ -m gpu

[flake8]
max-line-length = 88
extend-ignore = E203
exclude =
    .git,
    __pycache__,
    build,
    dist,
    *.egg-info

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 88

[coverage:run]
source = src
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass

[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312, lint, type, security, docs
