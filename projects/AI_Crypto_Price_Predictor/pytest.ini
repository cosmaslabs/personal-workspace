[pytest]
# Test discovery and collection
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts =
    --verbose
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-branch
    --doctest-modules
    --durations=10
    --color=yes
    -p no:warnings

# Coverage settings
minversion = 8.0.0
required_plugins =
    pytest-cov>=4.1.0
    pytest-asyncio>=0.23.0
    pytest-mock>=3.12.0
    pytest-xdist>=3.5.0
    pytest-env>=1.1.0
    pytest-timeout>=2.2.0

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests related to API endpoints
    model: marks tests related to ML models
    data: marks tests related to data processing
    async: marks tests that are asynchronous
    gpu: marks tests that require GPU

# Environment variables
env =
    ENVIRONMENT=test
    LOG_LEVEL=DEBUG
    PYTHONPATH=src
    PYTHONHASHSEED=0
    TF_CPP_MIN_LOG_LEVEL=3

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeout (in seconds)
timeout = 300

# xdist settings (parallel test execution)
xdist_opts =
    --numprocesses=auto
    --maxprocesses=4
    --dist=loadfile

# Coverage settings
[coverage:run]
branch = True
source = src
omit =
    tests/*
    */__init__.py
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    if TYPE_CHECKING:

# Assertion rewriting
[pytest]
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning
    error::FutureWarning

# Cache settings
cache_dir = .pytest_cache

# JUnit report settings
junit_family = xunit2

# Doctest settings
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL

# Hypothesis settings
[tool:hypothesis]
deadline = null
max_examples = 100
derandomize = true
