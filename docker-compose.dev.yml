version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
      - python-packages:/app/.venv
    ports:
      - "3000:3000" # Main application
      - "8000:8000" # API Service
      - "13000:13000" # NocoBase
    environment:
      - NODE_ENV=development
      - PYTHON_ENV=development
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - nocobase
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ai_applications}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nocobase:
    image: nocobase/nocobase:latest
    environment:
      - DB_DIALECT=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-postgres}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - DB_DATABASE=${POSTGRES_DB:-ai_applications}
    ports:
      - "13000:13000"
    volumes:
      - nocobase-storage:/app/storage
    depends_on:
      - postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13000/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

  # Development Tools
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - postgres

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - app-network
    depends_on:
      - redis

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # SMTP Server
      - "8025:8025" # Web UI
    networks:
      - app-network

volumes:
  postgres-data:
  redis-data:
  nocobase-storage:
  python-packages:

networks:
  app-network:
    driver: bridge
